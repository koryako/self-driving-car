!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
F_	kalman_filter.h	/^	MatrixXd F_;$/;"	m	class:KalmanFilter
H_	kalman_filter.h	/^	MatrixXd H_;$/;"	m	class:KalmanFilter
KALMAN_FILTER_H_	kalman_filter.h	2;"	d
KalmanFilter	kalman_filter.cpp	/^KalmanFilter::KalmanFilter() {$/;"	f	class:KalmanFilter
KalmanFilter	kalman_filter.h	/^class KalmanFilter {$/;"	c
LASER	measurement_package.h	/^		LASER, RADAR$/;"	e	enum:MeasurementPackage::SensorType
MEASUREMENT_PACKAGE_H_	measurement_package.h	2;"	d
MeasurementPackage	measurement_package.h	/^class MeasurementPackage {$/;"	c
P_	kalman_filter.h	/^	MatrixXd P_;$/;"	m	class:KalmanFilter
Predict	kalman_filter.cpp	/^void KalmanFilter::Predict() {$/;"	f	class:KalmanFilter
ProcessMeasurement	tracking.cpp	/^void Tracking::ProcessMeasurement(const MeasurementPackage &measurement_pack) {$/;"	f	class:Tracking
Q_	kalman_filter.h	/^	MatrixXd Q_;$/;"	m	class:KalmanFilter
RADAR	measurement_package.h	/^		LASER, RADAR$/;"	e	enum:MeasurementPackage::SensorType
R_	kalman_filter.h	/^	MatrixXd R_;$/;"	m	class:KalmanFilter
SensorType	measurement_package.h	/^	enum SensorType {$/;"	g	class:MeasurementPackage
TRACKING_H_	tracking.h	2;"	d
Tracking	tracking.cpp	/^Tracking::Tracking() {$/;"	f	class:Tracking
Tracking	tracking.h	/^class Tracking {$/;"	c
Update	kalman_filter.cpp	/^void KalmanFilter::Update(const VectorXd &z) {$/;"	f	class:KalmanFilter
is_initialized_	tracking.h	/^	bool is_initialized_;$/;"	m	class:Tracking
kf_	tracking.h	/^	KalmanFilter kf_;$/;"	m	class:Tracking
main	main.cpp	/^int main() {$/;"	f
noise_ax	tracking.h	/^	float noise_ax;$/;"	m	class:Tracking
noise_ay	tracking.h	/^	float noise_ay;$/;"	m	class:Tracking
previous_timestamp_	tracking.h	/^	long previous_timestamp_;$/;"	m	class:Tracking
raw_measurements_	measurement_package.h	/^	Eigen::VectorXd raw_measurements_;$/;"	m	class:MeasurementPackage
sensor_type_	measurement_package.h	/^	} sensor_type_;$/;"	m	class:MeasurementPackage	typeref:enum:MeasurementPackage::SensorType
timestamp_	measurement_package.h	/^	long timestamp_;$/;"	m	class:MeasurementPackage
x_	kalman_filter.h	/^	VectorXd x_;$/;"	m	class:KalmanFilter
~KalmanFilter	kalman_filter.cpp	/^KalmanFilter::~KalmanFilter() {$/;"	f	class:KalmanFilter
~Tracking	tracking.cpp	/^Tracking::~Tracking() {$/;"	f	class:Tracking
